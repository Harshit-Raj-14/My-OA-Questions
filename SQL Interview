10 Most Commonly Asked SQL Interview Questions:

📍 What is normalization and why is it important?
📍 Explain the concept of ACID properties in SQL.
📍 What are indexes and how do they improve query performance?
📍 What is a view in SQL and what are its uses?
📍 Explain the difference between DELETE and TRUNCATE commands.
📍 What is a subquery and how is it different from a JOIN?
📍 Describe the use of GROUP BY and HAVING clauses.
📍 What is the difference between a correlated subquery and a non-correlated subquery?
📍 What is the difference between clustered and non-clustered index in SQL?
📍 How do you handle NULL values in SQL? Provide an example query.




SQL Interview Questions with Answers in data analyst interviews 🎯

✅ Find the products that have been ordered more than ten times.
Tables: Products (ProductID, ProductName), OrderItems (OrderID, ProductID, Quantity)

SELECT p.ProductID, p.ProductName FROM Products p JOIN OrderItems oi ON p.ProductID = oi.ProductID GROUP BY p.ProductID, p.ProductName HAVING SUM(oi.Quantity) > 10;

✅ Find the second highest salary of employees. 
Table: Employees (EmployeeID, Name, Salary)

SELECT MAX(Salary) AS SecondHighestSalary FROM Employees WHERE Salary < (SELECT MAX(Salary) FROM Employees);

✅ Write a SQL query to find the average purchase amount for each customer. Assume you have two tables: Customers (CustomerID, Name) and Orders (OrderID, CustomerID, Amount).

SELECT c.CustomerID, c. Name, AVG(o.Amount) AS AveragePurchase"" FROM Customers c JOIN Orders o ON c.CustomerID = o.CustomerID GROUP BY c.CustomerID, c. Name;

✅ Write a query to find the employee with the minimum salary in each department from a table Employees with columns EmployeelD, Name, DepartmentID, and Salary.

SELECT e1.DepartmentID, e1.EmployeeID, e1 .Name, e1.Salary FROM Employees e1 WHERE Salary = (SELECT MIN(Salary) FROM Employees e2 WHERE e2.DepartmentID = e1.DepartmentID);

✅ Write a SQL query to find all products that have never been sold. Assume you have a table Products (ProductID, ProductName) and a table Sales (SaleID, ProductID, Quantity).

SELECT p.ProductID, p.ProductName FROM Products p LEFT JOIN Sales s ON p.ProductID = s.ProductID WHERE s.ProductID IS NULL;

✅ Given a table Orders with columns OrderID, CustomerID, OrderDate, and a table OrderItems with columns OrderID, ItemID, Quantity, write a query to find the customer with the highest total order quantity.

SELECT o.CustomerID, SUM(oi.Quantity) AS TotalQuantity FROM Orders o JOIN OrderItems oi ON o.OrderID = oi.OrderID GROUP BY o.CustomerID ORDER BY TotalQuantity DESC LIMIT 1;

✅ Write a SQL query to find the earliest order date for each customer from a table Orders (OrderID, CustomerID, OrderDate).

SELECT CustomerID, MIN(OrderDate) AS EarliestOrderDate" FROM Orders GROUP BY CustomerID;
